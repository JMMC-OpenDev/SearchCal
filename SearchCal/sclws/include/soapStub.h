/* soapStub.h
   Generated by gSOAP 2.7.11 from ../include/sclwsWS.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#ifndef sclwsWS_H
#define sclwsWS_H
#ifndef __cplusplus
#error This is a C++ include file and cannot be used from plain C
#endif
#endif /*!sclwsWS_H*/
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_ns__GetServerStatusSearchCalResponse
#define SOAP_TYPE_ns__GetServerStatusSearchCalResponse (9)
/* ns:GetServerStatusSearchCalResponse */
struct ns__GetServerStatusSearchCalResponse
{
public:
	char **status;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns__GetServerStatusSearchCal
#define SOAP_TYPE_ns__GetServerStatusSearchCal (10)
/* ns:GetServerStatusSearchCal */
struct ns__GetServerStatusSearchCal
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__GetCalOpenSessionResponse
#define SOAP_TYPE_ns__GetCalOpenSessionResponse (12)
/* ns:GetCalOpenSessionResponse */
struct ns__GetCalOpenSessionResponse
{
public:
	char **jobId;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns__GetCalOpenSession
#define SOAP_TYPE_ns__GetCalOpenSession (13)
/* ns:GetCalOpenSession */
struct ns__GetCalOpenSession
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__GetCalSearchCalResponse
#define SOAP_TYPE_ns__GetCalSearchCalResponse (15)
/* ns:GetCalSearchCalResponse */
struct ns__GetCalSearchCalResponse
{
public:
	char **voTable;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns__GetCalSearchCal
#define SOAP_TYPE_ns__GetCalSearchCal (16)
/* ns:GetCalSearchCal */
struct ns__GetCalSearchCal
{
public:
	char *jobId;	/* optional element of type xsd:string */
	char *query;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns__GetCalQueryStatusResponse
#define SOAP_TYPE_ns__GetCalQueryStatusResponse (18)
/* ns:GetCalQueryStatusResponse */
struct ns__GetCalQueryStatusResponse
{
public:
	char **status;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns__GetCalQueryStatus
#define SOAP_TYPE_ns__GetCalQueryStatus (19)
/* ns:GetCalQueryStatus */
struct ns__GetCalQueryStatus
{
public:
	char *jobId;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns__GetCalCancelSessionResponse
#define SOAP_TYPE_ns__GetCalCancelSessionResponse (23)
/* ns:GetCalCancelSessionResponse */
struct ns__GetCalCancelSessionResponse
{
public:
	bool *isOK;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ns__GetCalCancelSession
#define SOAP_TYPE_ns__GetCalCancelSession (24)
/* ns:GetCalCancelSession */
struct ns__GetCalCancelSession
{
public:
	char *jobId;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns__GetStarSearchCalResponse
#define SOAP_TYPE_ns__GetStarSearchCalResponse (26)
/* ns:GetStarSearchCalResponse */
struct ns__GetStarSearchCalResponse
{
public:
	char **votable;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns__GetStarSearchCal
#define SOAP_TYPE_ns__GetStarSearchCal (27)
/* ns:GetStarSearchCal */
struct ns__GetStarSearchCal
{
public:
	char *query;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (28)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (29)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (31)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (34)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (35)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns__GetServerStatusSearchCal(struct soap*, char **status);

SOAP_FMAC5 int SOAP_FMAC6 ns__GetCalOpenSession(struct soap*, char **jobId);

SOAP_FMAC5 int SOAP_FMAC6 ns__GetCalSearchCal(struct soap*, char *jobId, char *query, char **voTable);

SOAP_FMAC5 int SOAP_FMAC6 ns__GetCalQueryStatus(struct soap*, char *jobId, char **status);

SOAP_FMAC5 int SOAP_FMAC6 ns__GetCalCancelSession(struct soap*, char *jobId, bool *isOK);

SOAP_FMAC5 int SOAP_FMAC6 ns__GetStarSearchCal(struct soap*, char *query, char **votable);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetServerStatusSearchCal(struct soap *soap, const char *soap_endpoint, const char *soap_action, char **status);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalOpenSession(struct soap *soap, const char *soap_endpoint, const char *soap_action, char **jobId);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalSearchCal(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *jobId, char *query, char **voTable);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalQueryStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *jobId, char **status);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalCancelSession(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *jobId, bool *isOK);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetStarSearchCal(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *query, char **votable);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetServerStatusSearchCal(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetCalOpenSession(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetCalSearchCal(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetCalQueryStatus(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetCalCancelSession(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetStarSearchCal(struct soap*);

#endif

/* End of soapStub.h */
