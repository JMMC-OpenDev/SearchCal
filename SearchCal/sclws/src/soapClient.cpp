/* soapClient.cpp
   Generated by gSOAP 2.7.11 from ../include/sclwsWS.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.11 2013-07-11 13:46:20 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetServerStatusSearchCal(struct soap *soap, const char *soap_endpoint, const char *soap_action, char **status)
{	struct ns__GetServerStatusSearchCal soap_tmp_ns__GetServerStatusSearchCal;
	struct ns__GetServerStatusSearchCalResponse *soap_tmp_ns__GetServerStatusSearchCalResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetServerStatusSearchCal(soap, &soap_tmp_ns__GetServerStatusSearchCal);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetServerStatusSearchCal(soap, &soap_tmp_ns__GetServerStatusSearchCal, "ns:GetServerStatusSearchCal", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetServerStatusSearchCal(soap, &soap_tmp_ns__GetServerStatusSearchCal, "ns:GetServerStatusSearchCal", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!status)
		return soap_closesock(soap);
	*status = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetServerStatusSearchCalResponse = soap_get_ns__GetServerStatusSearchCalResponse(soap, NULL, "ns:GetServerStatusSearchCalResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (status && soap_tmp_ns__GetServerStatusSearchCalResponse->status)
		*status = *soap_tmp_ns__GetServerStatusSearchCalResponse->status;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalOpenSession(struct soap *soap, const char *soap_endpoint, const char *soap_action, char **jobId)
{	struct ns__GetCalOpenSession soap_tmp_ns__GetCalOpenSession;
	struct ns__GetCalOpenSessionResponse *soap_tmp_ns__GetCalOpenSessionResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalOpenSession(soap, &soap_tmp_ns__GetCalOpenSession);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalOpenSession(soap, &soap_tmp_ns__GetCalOpenSession, "ns:GetCalOpenSession", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalOpenSession(soap, &soap_tmp_ns__GetCalOpenSession, "ns:GetCalOpenSession", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!jobId)
		return soap_closesock(soap);
	*jobId = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetCalOpenSessionResponse = soap_get_ns__GetCalOpenSessionResponse(soap, NULL, "ns:GetCalOpenSessionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (jobId && soap_tmp_ns__GetCalOpenSessionResponse->jobId)
		*jobId = *soap_tmp_ns__GetCalOpenSessionResponse->jobId;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalSearchCal(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *jobId, char *query, char **voTable)
{	struct ns__GetCalSearchCal soap_tmp_ns__GetCalSearchCal;
	struct ns__GetCalSearchCalResponse *soap_tmp_ns__GetCalSearchCalResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_tmp_ns__GetCalSearchCal.jobId = jobId;
	soap_tmp_ns__GetCalSearchCal.query = query;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalSearchCal(soap, &soap_tmp_ns__GetCalSearchCal);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalSearchCal(soap, &soap_tmp_ns__GetCalSearchCal, "ns:GetCalSearchCal", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalSearchCal(soap, &soap_tmp_ns__GetCalSearchCal, "ns:GetCalSearchCal", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!voTable)
		return soap_closesock(soap);
	*voTable = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetCalSearchCalResponse = soap_get_ns__GetCalSearchCalResponse(soap, NULL, "ns:GetCalSearchCalResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (voTable && soap_tmp_ns__GetCalSearchCalResponse->voTable)
		*voTable = *soap_tmp_ns__GetCalSearchCalResponse->voTable;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalQueryStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *jobId, char **status)
{	struct ns__GetCalQueryStatus soap_tmp_ns__GetCalQueryStatus;
	struct ns__GetCalQueryStatusResponse *soap_tmp_ns__GetCalQueryStatusResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_tmp_ns__GetCalQueryStatus.jobId = jobId;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalQueryStatus(soap, &soap_tmp_ns__GetCalQueryStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalQueryStatus(soap, &soap_tmp_ns__GetCalQueryStatus, "ns:GetCalQueryStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalQueryStatus(soap, &soap_tmp_ns__GetCalQueryStatus, "ns:GetCalQueryStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!status)
		return soap_closesock(soap);
	*status = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetCalQueryStatusResponse = soap_get_ns__GetCalQueryStatusResponse(soap, NULL, "ns:GetCalQueryStatusResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (status && soap_tmp_ns__GetCalQueryStatusResponse->status)
		*status = *soap_tmp_ns__GetCalQueryStatusResponse->status;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalCancelSession(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *jobId, bool *isOK)
{	struct ns__GetCalCancelSession soap_tmp_ns__GetCalCancelSession;
	struct ns__GetCalCancelSessionResponse *soap_tmp_ns__GetCalCancelSessionResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_tmp_ns__GetCalCancelSession.jobId = jobId;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalCancelSession(soap, &soap_tmp_ns__GetCalCancelSession);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalCancelSession(soap, &soap_tmp_ns__GetCalCancelSession, "ns:GetCalCancelSession", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalCancelSession(soap, &soap_tmp_ns__GetCalCancelSession, "ns:GetCalCancelSession", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!isOK)
		return soap_closesock(soap);
	soap_default_bool(soap, isOK);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetCalCancelSessionResponse = soap_get_ns__GetCalCancelSessionResponse(soap, NULL, "ns:GetCalCancelSessionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (isOK && soap_tmp_ns__GetCalCancelSessionResponse->isOK)
		*isOK = *soap_tmp_ns__GetCalCancelSessionResponse->isOK;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetStarSearchCal(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *query, char **votable)
{	struct ns__GetStarSearchCal soap_tmp_ns__GetStarSearchCal;
	struct ns__GetStarSearchCalResponse *soap_tmp_ns__GetStarSearchCalResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_tmp_ns__GetStarSearchCal.query = query;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetStarSearchCal(soap, &soap_tmp_ns__GetStarSearchCal);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetStarSearchCal(soap, &soap_tmp_ns__GetStarSearchCal, "ns:GetStarSearchCal", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetStarSearchCal(soap, &soap_tmp_ns__GetStarSearchCal, "ns:GetStarSearchCal", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!votable)
		return soap_closesock(soap);
	*votable = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetStarSearchCalResponse = soap_get_ns__GetStarSearchCalResponse(soap, NULL, "ns:GetStarSearchCalResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (votable && soap_tmp_ns__GetStarSearchCalResponse->votable)
		*votable = *soap_tmp_ns__GetStarSearchCalResponse->votable;
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
