PRO MAKE_JSDC_POLYNOMS,COLORS,RCOLORS,RESIDU,E_RESIDU
;
  COMMON A, FLAG,MODE,DEG,NSIG,CF,CI,CJ,NBI,NBJ,ABS_MAG_SUPERGIANT,ABS_MAG_GIANT,ABS_MAG_DWARF,EMAG_MIN
  COMMON B, DATA_B,DATA_C,DIAM_I,EDIAM_I,PARAMS,E_PARAMS,PAR,EPAR,SCL,NBD,PAR_DR,PLX,EPLX,DHIP,EDHIP
  COMMON C, MAG_B,EMAG_B,DIAM_B,EDIAM_B,LC_B,SP_B,DMEAN_B,EDMEAN_B,RES_B,CHI2_MD,WWD,MCOV_POL,CHI2_POL
  COMMON D, MAG_C,EMAG_C,DIAM_C,EDIAM_C,LC_C,SP_C,DMEAN_C,EDMEAN_C,RES_C,CHI2_DS,WWS,AV,EAV
  COMMON E, SEED,STAT,SNR,goodInputStars
;
; Read database
  X=FINDGEN(17)*(!PI*2./16.) & USERSYM, 0.75*COS(X), 0.75*SIN(X), /FILL
;
; Initialize parameters & arrays
  MAG_B=[TRANSPOSE(DATA_B.B),TRANSPOSE(DATA_B.V),TRANSPOSE(DATA_B.ICOUS),TRANSPOSE(DATA_B.J),TRANSPOSE(DATA_B.H),TRANSPOSE(DATA_B.K)]
  EMAG_B=[TRANSPOSE(DATA_B.E_B),TRANSPOSE(DATA_B.E_V),TRANSPOSE(DATA_B.E_ICOUS),TRANSPOSE(DATA_B.E_J),TRANSPOSE(DATA_B.E_H),TRANSPOSE(DATA_B.E_K)]
  LC_B=DATA_B.LUM_CLASS & DLC=DATA_B.LUM_CLASS_DELTA & SP_B=DATA_B.COLOR_TABLE_INDEX & DSP=DATA_B.COLOR_TABLE_DELTA & ORIG_SP=DATA_B.SPTYPE
  MAG_B=TRANSPOSE(MAG_B) & EMAG_B=ABS(TRANSPOSE(EMAG_B)) & DIAM_I=DATA_B.LD_MEAS & EDIAM_I=DATA_B.E_LD_MEAS & PLX=DATA_B.PLX & EPLX=DATA_B.E_PLX
  NSTAR=N_ELEMENTS(MAG_B(*,0)) & DHIP=DBLARR(NSTAR) & EDHIP=DHIP & S=WHERE(FINITE(PLX) AND FINITE(EPLX) AND PLX GT 0 AND EPLX GT 0)
  DHIP(S)=10.-5*ALOG10(PLX(S)) & EDHIP(S)=5.*EPLX(S)/PLX(S)/ALOG(10) & NBD=N_ELEMENTS(NBI) & AV=DBLARR(NSTAR,NBD) & EAV=AV
  DIAM_B=DBLARR(NSTAR,NBD) & EDIAM_B=DIAM_B & CHI2_MD=DBLARR(NSTAR) & DMEAN_B=DBLARR(NSTAR) & EDMEAN_B=DMEAN_B & COLORS=DBLARR(NSTAR,NBD)-100
  RCOLORS=COLORS & RES_B=COLORS & RES_C=RES_B & RESIDU=COLORS & E_RESIDU=COLORS & COOL=[1000,64000,65000,3000000000] & SP_B=DOUBLE(FLOAT(SP_B))
  PAR_DR=DBLARR(DEG+1,DEG+1,NBD) & EDMEAN_C=DBLARR(250,NBD) & DMEAN_C=DBLARR(250,NBD) & DLC_B=DATA_B.LUM_CLASS_DELTA
  A=EMAG_B(*,0:1) & S=WHERE(A LT EMAG_MIN) & A(S)=EMAG_MIN & EMAG_B(*,0:1)=A ; magnitude error correction
;S=WHERE(EMAG_B(*,*) LT EMAG_MIN) & EMAG_B(S)=EMAG_MIN ; magnitude error correction

; LBO: 0.15 gives chi2_md = 1 but we prefer being pessimistic ie 0.2
EMAG_MAX=0.2
  S=WHERE(EMAG_B(*,*) GT EMAG_MAX) & PRINT,"HIGH E_MAG_B:",N_ELEMENTS(S) & EMAG_B(S)=EMAG_MAX ; magnitude error correction (too high)

  Q=TOTAL(MAG_B,2) & P=TOTAL(EMAG_B,2) & W=WHERE(FINITE(Q) AND FINITE(P)) ; w: magnitude definies: W               LONG      = Array[779]

;
; Select "good" database stars
;
  IF (FLAG EQ 0) THEN WWD=WHERE(SP_B(W) NE -1 AND DIAM_I(W) NE -1 AND EDIAM_I(W) NE -1 AND FINITE(DIAM_I(W)) AND DIAM_I(W)/EDIAM_I(W) GT SNR AND DSP(W) EQ 0)
  IF (FLAG EQ 124) THEN WWD=WHERE(LC_B(W) NE 5 AND LC_B(W) NE 3 AND SP_B(W) NE -1 AND DIAM_I(W) NE -1 AND EDIAM_I(W) NE -1 AND FINITE(DIAM_I(W)) AND DIAM_I(W)/EDIAM_I(W) GT SNR AND DSP(W) EQ 0)
  IF (FLAG EQ 5) THEN WWD=WHERE(LC_B(W) EQ 5 AND DLC(W) EQ 0 AND SP_B(W) NE -1 AND DIAM_I(W) NE -1 AND EDIAM_I(W) NE -1 AND FINITE(DIAM_I(W)) AND DIAM_I(W)/EDIAM_I(W) GT SNR AND DSP(W) EQ 0)
  IF (FLAG EQ 3) THEN WWD=WHERE(LC_B(W) EQ 3 AND DLC(W) EQ 0 AND SP_B(W) NE -1 AND DIAM_I(W) NE -1 AND EDIAM_I(W) NE -1 AND FINITE(DIAM_I(W)) AND DIAM_I(W)/EDIAM_I(W) GT SNR AND DSP(W) EQ 0)
  IF (FLAG EQ 45) THEN WWD=WHERE((LC_B(W) EQ 4 OR LC_B(W) EQ 5) AND DLC(W) EQ 0 AND SP_B(W) NE -1 AND DIAM_I(W) NE -1 AND EDIAM_I(W) NE -1 AND FINITE(DIAM_I(W)) AND DIAM_I(W)/EDIAM_I(W) GT SNR AND DSP(W) EQ 0)
  IF (FLAG EQ 35) THEN WWD=WHERE((LC_B(W) EQ 3 OR LC_B(W) EQ 5) AND DLC(W) EQ 0 AND SP_B(W) NE -1 AND DIAM_I(W) NE -1 AND EDIAM_I(W) NE -1 AND FINITE(DIAM_I(W)) AND DIAM_I(W)/EDIAM_I(W) GT SNR AND DSP(W) EQ 0)
  IF (FLAG EQ 123) THEN WWD=WHERE((LC_B(W) EQ 1 OR LC_B(W) EQ 2 OR LC_B(W) EQ 3) AND DLC(W) EQ 0 AND SP_B(W) NE -1 AND DIAM_I(W) NE -1 AND EDIAM_I(W) NE -1 AND FINITE(DIAM_I(W)) AND DIAM_I(W)/EDIAM_I(W) GT SNR  AND DSP(W) EQ 0)
  IF (FLAG EQ 1234) THEN WWD=WHERE((LC_B(W) EQ 1 OR LC_B(W) EQ 2 OR LC_B(W) EQ 3 OR LC_B(W) EQ 4) AND DLC(W) EQ 0 AND SP_B(W) NE -1 AND DIAM_I(W) NE -1 AND EDIAM_I(W) NE -1 AND FINITE(DIAM_I(W)) AND DIAM_I(W)/EDIAM_I(W) GT SNR AND DSP(W) EQ 0)
  WWD=W(WWD)                    ; WWD (C)         LONG      = Array[574]
  goodInputStars=wwd

  FILTERED_AT_START=(DATA_B)[WWD]

;
  IF (STAT EQ 1) THEN BEGIN
     ND=N_ELEMENTS(WWD) & A=FIX(RANDOMN(SEED,/UNIFORM,FIX(ND/2*1.3))*ND) & WWD=WWD(A) & WWD=WWD(UNIQ(WWD,SORT(WWD)))
  ENDIF
  IF (MODE EQ 'FIX') THEN WWD=WWS
  ND=LONG(N_ELEMENTS(WWD))

;
; Interstellar reddening coefficients 
;
; LBO: Fix extinction coefficients: use explicit computation from
; literature values:
  CF=DBLARR(6)                  ; Rc coefficients
;CF=[1.32,1.0,0.48,0.28,0.17,0.12] & CI=CF(NBI)/(CF(NBI)-CF(NBJ)) & CJ=CF(NBJ)/(CF(NBI)-CF(NBJ))
  CF(0)=4.10D & CF(1)=3.1D & CF(2)=1.57D & CF(3)=0.86D & CF(4)=0.53D & CF(5)=0.36D
  CF/=3.1D                      ; divide by Rv
  CI=CF(NBI)/(CF(NBI)-CF(NBJ)) & CJ=CF(NBJ)/(CF(NBI)-CF(NBJ))
;
; Compute residuals from eq. : residual = lg(diam_i)+ci(i)*mag(j)-ci(j)*mag(i) = a + (M0-M1)*[b-ci(i)]
  FOR II=0, N_ELEMENTS(WWD)-1 DO BEGIN
     JJ=WWD(II) & IM=SP_B(JJ) & LM=LC_B(JJ) 
     RESIDU(JJ,*)=ALOG10(DIAM_I(JJ))-(0.2*CJ*MAG_B(JJ,NBI)-0.2*CI*MAG_B(JJ,NBJ))
     E_RESIDU(JJ,*)=SQRT((EDIAM_I(JJ)/DIAM_I(JJ)/ALOG(10.))^2+0.04*CI^2*EMAG_B(JJ,NBJ)^2+0.04*CJ^2*EMAG_B(JJ,NBI)^2)
  ENDFOR
  FOR II=0, NBD-1 DO RCOLORS(WWD,II)=5.*(ALOG10(DIAM_I(WWD))-RESIDU(WWD,II)) & S=WHERE(LC_B EQ -1) & AV(S,*)=-100 & EAV(S,*)=-100
;
; Fit residuals with polynom band per band
;
  !P.MULTI=[0,2,2]
  PARAM1=DBLARR(NBD,DEG+1) & E_PARAM1=PARAM1 & T=N_ELEMENTS(EDMEAN_C(*,0)) & IND=DBLARR(T,DEG+1) & FOR KK=0, DEG DO IND(*,KK)=DINDGEN(T)^KK
  FOR N=0, NBD-1 DO BEGIN
     S=SORT(SP_B(WWD)) & A=WWD(S) & MDAT=RESIDU(A,N)/E_RESIDU(A,N) & VEC=DBLARR(ND,DEG+1)
     FOR KK=0, DEG DO VEC(*,KK)=SP_B(A)^KK/E_RESIDU(A,N) & INV=INVERT(TRANSPOSE(VEC)#VEC,/DOUBLE,STATUS)
     PARAM1(N,*)=INV#TRANSPOSE(VEC)#MDAT & R=DINDGEN(DEG+1) & E_PARAM1(N,*)=SQRT(INV(R,R)) & PAR_DR(R,R,N)=INV
     FIT=DBLARR(ND) & FOR KK=0, DEG DO FIT=FIT+PARAM1(N,KK)*SP_B(A)^KK
     FOR KK=0, T-1 DO DMEAN_C(KK,N)=TOTAL(PARAM1(N,*)*IND(KK,*))
     FOR KK=0, T-1 DO EDMEAN_C(KK,N)=SQRT(IND(KK,*)#INV#TRANSPOSE(IND(KK,*)))
     PLOTERR,SP_B(A),RESIDU(A,N),E_RESIDU(A,N),PSYM=8,NOHAT=1,YRANGE=[0,1.3],YSTYLE=1 & OPLOT,SP_B(A),FIT,COLOR=64000
     RES_B(A,N)=(RESIDU(A,N)-FIT)/E_RESIDU(A,N) & CHI2=MEAN(RES_B(A,N)^2) ; & PRINT,N,CHI2,N_ELEMENTS(A)
  ENDFOR
  !P.MULTI=0
;
; Histogram of residuals
  BIN=0.02 & HH=HISTOGRAM(RESIDU(WWD,*),BINSIZE=BIN,LOCATIONS=XX) & XX=XX+BIN/2. & PRINT,' '
  RES=GAUSSFIT(XX,HH,NTERMS=3,Z) & PLOT,XX,HH,PSYM=10 & OPLOT,XX,RES,COLOR=65000 & PRINT,Z & PRINT,' '
;
; Fit residuals with polynoms all in one
  NS=0
  WHILE (NS NE N_ELEMENTS(WWD)) DO BEGIN
     NPAR=(DEG+1)*NBD & DCOV_IB=DBLARR(NBD,NBD,ND) & VEC=DBLARR(NBD*ND,NPAR) & MDAT=DBLARR(NBD*ND) 
     MDIF=MDAT & MAT1=0.2*CJ#TRANSPOSE(0.2*CJ) & MAT2=0.2*CI#TRANSPOSE(0.2*CI) & MAT3=0.2*CI#TRANSPOSE(0.2*CJ)
     ICOV=DBLARR(NBD*ND,NBD*ND) & ED=EDIAM_I(WWD)/DIAM_I(WWD)/ALOG(10.)
     FOR LL1=0, NBD-1 DO BEGIN
        Q=EMAG_B(WWD,NBI(LL1)) & R=EMAG_B(WWD,NBJ(LL1))
        FOR LL2=0, NBD-1 DO BEGIN
           IF (NBI(LL1) EQ NBI(LL2) AND NBJ(LL1) EQ NBJ(LL2)) THEN DCOV_IB(LL1,LL2,*)=MAT1(LL1,LL2)*Q^2+MAT2(LL1,LL1)*R^2+ED^2
           IF (NBI(LL1) EQ NBI(LL2) AND NBJ(LL1) NE NBJ(LL2)) THEN DCOV_IB(LL1,LL2,*)=MAT1(LL1,LL2)*Q^2+ED^2
           IF (NBI(LL1) NE NBI(LL2) AND NBJ(LL1) EQ NBJ(LL2)) THEN DCOV_IB(LL1,LL2,*)=MAT2(LL1,LL2)*R^2+ED^2
           IF (NBI(LL1) NE NBI(LL2) AND NBJ(LL1) NE NBJ(LL2)) THEN DCOV_IB(LL1,LL2,*)=ED^2
           IF (NBI(LL1) EQ NBJ(LL2) AND NBJ(LL1) NE NBI(LL2)) THEN DCOV_IB(LL1,LL2,*)=-MAT3(LL1,LL2)*Q^2+ED^2
           IF (NBI(LL1) NE NBJ(LL2) AND NBJ(LL1) EQ NBI(LL2)) THEN DCOV_IB(LL1,LL2,*)=-MAT3(LL2,LL1)*R^2+ED^2
        ENDFOR
     ENDFOR
;
     FOR JJ=0, NBD-1 DO BEGIN
        FOR KK=0, DEG DO VEC(DINDGEN(ND)*NBD+JJ,JJ*(DEG+1)+KK)=SP_B(WWD)^KK
     ENDFOR
     MDAT(*)=TRANSPOSE(RESIDU(WWD,*))
;
     FOR II=0, ND-1 DO BEGIN
        KK=II*NBD & ICOV(KK:KK+NBD-1,KK:KK+NBD-1)=INVERT(DCOV_IB(*,*,II),STATUS,/DOUBLE) & IF (STATUS NE 0) THEN PRINT,STATUS,II
     ENDFOR
;
     MCOV_POL=INVERT(TRANSPOSE(VEC)#ICOV#VEC,STATUS,/DOUBLE) ; covariance matrix of polynom coefficients
     PAR=MCOV_POL#TRANSPOSE(VEC)#ICOV#MDAT & A=DINDGEN(NBD*(DEG+1)) & E_PAR=SQRT(MCOV_POL(A,A)) ; polynom coefficients & errors
     PARAMS=DBLARR(NBD,DEG+1) & E_PARAMS=PARAMS
     FOR N=0, NBD-1 DO PARAMS(N,*)=PAR(N*(DEG+1)+DINDGEN(DEG+1)) & FOR N=0, NBD-1 DO E_PARAMS(N,*)=E_PAR(N*(DEG+1)+DINDGEN(DEG+1))
;
     FOR II=0, ND-1 DO BEGIN
        FOR JJ=0, NBD-1 DO BEGIN
           MDIF(II*NBD+JJ)=MDAT(NBD*II+JJ)-TOTAL(PARAMS(JJ,*)*SP_B(WWD(II))^DINDGEN(DEG+1))
           RES_B(WWD(II),JJ)=MDIF(II*NBD+JJ)/E_RESIDU(WWD(II),JJ)
        ENDFOR
     ENDFOR
;
     CHI2_POL=TRANSPOSE(MDIF)#ICOV#MDIF/(ND*NBD-NPAR) & S=DBLARR(ND,NBD)-100 ; polynom coefficients chi2
     FOR N=0, NBD-1 DO BEGIN
        A=WHERE(ABS(RES_B(WWD,N)) LT NSIG, NP) & IF (NP NE 0) THEN S(A,N)=1
     ENDFOR
;
; Compute modeled diameters & errors for all bands
;
     FOR II=0, NBD-1 DO BEGIN
        FOR JJ=0, ND-1 DO BEGIN
           KK=WWD(JJ) & A=MAG_B(KK,NBI(II)) & B=MAG_B(KK,NBJ(II)) & C=EMAG_B(KK,NBI(II)) & D=EMAG_B(KK,NBJ(II))
           DIAM_B(KK,II)=0.2*CJ(II)*A-0.2*CI(II)*B+TOTAL(PARAMS(II,*)*SP_B(KK)^DINDGEN(DEG+1))
           MT=MCOV_POL(II*(DEG+1):(II+1)*(DEG+1)-1,II*(DEG+1):(II+1)*(DEG+1)-1) 
           EDIAM_B(KK,II)=SQRT(0.04*CJ(II)^2*C^2+0.04*CI(II)^2*D^2+TRANSPOSE(SP_B(KK)^DINDGEN(DEG+1))#MT#(SP_B(KK)^DINDGEN(DEG+1)))
           RES_C(KK,II)=(ALOG10(DIAM_I(KK))-DIAM_B(KK,II))/SQRT((ED(JJ)^2+EDIAM_B(KK,II)^2))
        ENDFOR
     ENDFOR
;
; Compute mean modeled diameters & errors
;
     DCOV_OB=DCOV_IB & AAA=DOUBLE(FLOAT(SP_B)) & ERR=DBLARR(NBD,ND)
; LBO: DCOV_OB must not have the term ED(II)^2 to be comparable (error) with SearchCal
; HERE there is confusion as CHI2_MD=dist(DMEAN, D_INPUT)
;DCOV_OB=DCOV_IB & FOR II=0, ND-1 DO DCOV_OB(*,*,II)=DCOV_IB(*,*,II)-ED(II)^2 & AAA=DOUBLE(FLOAT(SP_B)) & ERR=DBLARR(NBD,ND)

     FOR II=0, ND-1 DO BEGIN
        FOR JJ=0, NBD-1 DO BEGIN
           FOR KK=0, NBD-1 DO BEGIN
              FOR Z=0, DEG DO BEGIN
                 FOR W=0, DEG DO BEGIN
                    DCOV_OB(KK,JJ,II)=DCOV_OB(KK,JJ,II)+AAA(WWD(II))^Z*AAA(WWD(II))^W*MCOV_POL((DEG+1)*JJ+Z,(DEG+1)*KK+W)
                    IF (KK EQ JJ) THEN ERR(JJ,II)=ERR(JJ,II)+AAA(WWD(II))^Z*AAA(WWD(II))^W*MCOV_POL((DEG+1)*JJ+Z,(DEG+1)*KK+W)
                 ENDFOR
              ENDFOR
           ENDFOR
        ENDFOR
        C=DCOV_OB(*,*,II) & B=INVERT(C,/DOUBLE,STATUS) & A=TOTAL(B) & IF (STATUS NE 0) THEN PRINT,II,STATUS
        DMEAN_B(WWD(II))=TOTAL(B#TOTAL(DIAM_B(WWD(II),*),1))/A & EDMEAN_B(WWD(II))=1.0/SQRT(A) 
        DIF=ALOG10(DIAM_I(WWD(II)))-DIAM_B(WWD(II),*)
; CHI2_MD = distance between DMEAN and INPUT DIAMS !! not comparable to CHI2_SearchCal !
        CHI2_MD(WWD(II))=DIF#B#TRANSPOSE(DIF)/(NBD) ; NBD (ALAIN) or NBD-1 (LBO)
     ENDFOR
;
     D=WHERE(TOTAL(S,2) EQ NBD) & WWD=WWD(D) & NS=N_ELEMENTS(WWD)
  ENDWHILE
;
; Plot residuals & fits
;
  !P.MULTI=[0,2,2]
  FOR N=0, NBD-1 DO BEGIN
     D=SORT(SP_B(WWD)) & A=WWD(D) & FIT=DBLARR(ND) & FOR KK=0, DEG DO FIT=FIT+PARAMS(N,KK)*SP_B(A)^KK
     PLOTERR,SP_B(A),RESIDU(A,N),E_RESIDU(A,N),NOHAT=1,PSYM=8,YRANGE=[0.,1.3],YSTYLE=1 & OPLOT,SP_B(A),FIT,COLOR=64000,THICK=2
     INV=MCOV_POL((DEG+1)*N:(DEG+1)*(N+1)-1,(DEG+1)*N:(DEG+1)*(N+1)-1)
     FOR KK=0, T-1 DO DMEAN_C(KK,N)=TOTAL(PARAMS(N,*)*IND(KK,*))
     FOR KK=0, T-1 DO EDMEAN_C(KK,N)=SQRT(IND(KK,*)#INV#TRANSPOSE(IND(KK,*)))
  ENDFOR
  !P.MULTI=0
rep='' & READ, 'press any key to continue', rep
;
; Plot results
  ZZ=DINDGEN(100)/10-5
; Plot histograms
  !P.MULTI=[0,3,2]
  FOR N=0, NBD-1 DO BEGIN
     BIN=0.4 & HH=HISTOGRAM(RES_C(WWD,N),BINSIZE=BIN,LOCATIONS=XX) & XX=XX+BIN/2. & RES=GAUSSFIT(XX,HH,NTERMS=3,Z)
     PLOT,XX,HH,PSYM=10,XRANGE=[-5,5],XSTYLE=1 & OPLOT,XX,RES,COLOR=65000 & PRINT,Z
  ENDFOR
  HH=HISTOGRAM(RES_C(WWD,*),BINSIZE=BIN,LOCATIONS=XX) & XX=XX+BIN/2. & RES=GAUSSFIT(XX,HH,NTERMS=3,Z)
  PLOT,XX,HH,PSYM=10,XRANGE=[-5,5],XSTYLE=1 & OPLOT,XX,RES,COLOR=1000 & PRINT,Z & PAR=PARAMS & EPAR=E_PARAMS
  !P.MULTI=0
rep='' & READ, 'press any key to continue', rep

; LBO: CHI2TH
L=WHERE(FINITE(CHI2_MD(WWD)), NL)
PRINT,"SAMPLES:", N_ELEMENTS(WWD), "N CHI2:",NL

  S=WHERE(CHI2_MD(WWD) LE NSIG, NS) & A=MEAN(CHI2_MD(WWD(S)))
  PRINT,' ' & PRINT,'NSTAR =',NS,N_ELEMENTS(WWD),'    CHI2_POL =',CHI2_POL,'    CHI2_MD =',A
; Plot results
  !P.MULTI=[0,3,2]
  FOR N=0, NBD-1 DO BEGIN
     PLOTERR,ALOG10(DIAM_I(WWD)),DIAM_B(WWD,N),ED,EDIAM_B(WWD,N),NOHAT=1,PSYM=8 & OPLOT,ZZ,ZZ,COLOR=64000
  ENDFOR
  PLOTERR,ALOG10(DIAM_I(WWD)),DMEAN_B(WWD),ED,EDMEAN_B(WWD),NOHAT=1,PSYM=8
  OPLOT,ALOG10(DIAM_I(WWD)),DMEAN_B(WWD),PSYM=8,COLOR=65000 & OPLOT,ZZ,ZZ,COLOR=64000
  !P.MULTI=0
rep='' & READ, 'press any key to continue', rep
;

  PASS_ALL_TESTS=(DATA_B)[WWD]

IF (MODE EQ 'FIX') THEN BEGIN
PRINT,"CI:",CI
PRINT,"CJ:",CJ
  ; LBO: dump
  ; idx, sp, 6 mags, 6 mag errors, 3 diams, 3 diam errors, 1 diam mean, 1 diam mean error
  NS=N_ELEMENTS(WWD)
  PRINT,"#REF STAR DATA:",NS 
  FOR N=0, NS-1 DO BEGIN
    PRINT,format='(%"{%d, /* SP \"%s\" idx */ %d, /*MAG*/ %16.9e, %16.9e, %16.9e, %16.9e, %16.9e, %16.9e, /*EMAG*/ %16.9e, %16.9e, %16.9e, %16.9e, %16.9e, %16.9e, /*DIAM*/ %16.9e, %16.9e, %16.9e, /*EDIAM*/ %16.9e, %16.9e, %16.9e, /*DMEAN*/ %16.9e, /*EDMEAN*/ %16.9e, /*CHI2*/ %16.9e },")',N, ORIG_SP(WWD(N)), SP_B(WWD(N)), MAG_B(WWD(N),*), EMAG_B(WWD(N),*), DIAM_B(WWD(N),*), EDIAM_B(WWD(N),*), DMEAN_B(WWD(N)), EDMEAN_B(WWD(N)), CHI2_MD(WWD(N))
  ENDFOR
ENDIF
  RETURN
END
